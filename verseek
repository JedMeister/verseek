#!/usr/bin/python3
# Copyright (c) TurnKey GNU/Linux - http://www.turnkeylinux.org
#
# This file is part of Verseek
#
# Verseek is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.

"""Seek to available versions in Debian source package

If no <version> is specified, undo previous seek (restore state)

Options:
  -l --list   list seekable versions

"""
from os.path import *  # 
import sys
import getopt

import verseek_lib as verseek


@help.usage(__doc__)
def usage():
    print("Syntax: {} -l /path/to/debian-source".format(sys.argv[0]),
          file=sys.stderr)
    print("Syntax: {} /path/to/debian-source [<version>]".format(sys.argv[0]),
          file=sys.stderr)


def fatal(s):
    print("error: " + str(s), file=sys.stderr)
    sys.exit(1)


def list(path):
    try:
        versions = verseek.list(path)
    except verseek.Error as e:
        fatal(e)

    for version in versions:
        print(version)


def seek(path, version):
    try:
        verseek.seek(path, version)
    except verseek.Error as e:
        fatal(e)


def main():
    try:
        opts, args = getopt.gnu_getopt(sys.argv[1:], "l", ["list"])
    except getopt.GetoptError as e:
        usage(e)

    if not args:
        usage()

    srcpath = args[0]
    if not isdir(srcpath):
        fatal("no such directory `%s'" % srcpath)

    for opt, val in opts:
        if opt == '-h':
            usage()

        if opt in ('-l', '--list'):
            return list(srcpath)

    try:
        version = args[1]
        if version in ('-l', '--list'):
            return list(srcpath)

    except IndexError:
        version = None

    seek(srcpath, version)


if __name__ == "__main__":
    main()
